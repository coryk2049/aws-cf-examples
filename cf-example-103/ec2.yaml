AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy EC2s required by entire stack.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Customer Resource Tags
        Parameters:
          - pmCustomer
          - pmProject
          - pmEnvironment
      - Label:
          default: VPC Configuration Parameters
        Parameters:
          - pmVpcRegion
          - pmPublicSubnet1
          - pmPublicSubnet2
          - pmPrivateSubnet1
          - pmPrivateSubnet2
      - Label:
          default: EC2 Configuration Parameters
        Parameters:
          - pmEc2ImageId
          - pmEc2InstanceType
          - pmEc2VolumeSize
          - pmAccessKeyId
      - Label:
          default: EC2 Security Group Parameters
        Parameters:
          - pmDMZSG
          - pmWEBSG
    ParameterLabels:
      pmCustomer:
        default: Enter Customer name
      pmProject:
        default: Enter Project name
      pmEnvironment:
        default: Enter Environment name
      pmVpcRegion:
        default: Enter VPC region
      pmPublicSubnet1:
        default: Enter Public subnet 1
      pmPublicSubnet2:
        default: Enter Public subnet 2
      pmPrivateSubnet1:
        default: Enter Private subnet 1
      pmPrivateSubnet2:
        default: Enter Private subnet 2
      pmEc2ImageId:
        default: Enter EC2 image id
      pmEc2InstanceType:
        default: Enter EC2 instance type
      pmEc2VolumeSize:
        default: Enter EC2 volume size
      pmAccessKeyId:
        default: Enter EC2 SSH access key
      pmDMZSG:
        default: Enter DMZ SG
      pmWEBSG:
        default: Enter WEB SG
Parameters:
  pmCustomer:
    Type: String
    Default: ACME
  pmProject:
    Type: String
    Default: ACME-Networkiong-Demo
  pmEnvironment:
    Type: String
    Default: DEV
  pmVpcRegion:
    Type: String
    Default: us-east-1
  pmPublicSubnet1:
    Type: AWS::EC2::Subnet::Id
  pmPublicSubnet2:
    Type: AWS::EC2::Subnet::Id
  pmPrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
  pmPrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
  pmEc2ImageId:
    Type: String
    Default: ami-0b5eea76982371e91
    AllowedValues:
      - ami-0b5eea76982371e91
      - ami-0fe472d8a85bc7b0e
    ConstraintDescription: Must be a valid EC2 image id
  pmEc2InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    ConstraintDescription: Must be a valid EC2 instance type
  pmEc2VolumeSize:
    Type: Number
    Default: '10'
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: Must be between 5 and 1024 Gb
  pmAccessKeyId:
    Type: AWS::EC2::KeyPair::KeyName
    Default: aws_cory1
  pmDMZSG:
    Type: AWS::EC2::SecurityGroup::Id
  pmWEBSG:
    Type: AWS::EC2::SecurityGroup::Id
Mappings: {}
Resources:
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ACME_AllEC2IntanceProfile
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'EC2InstanceRole'
  BastionServer1:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              telnet: []
              zip: []
              unzip: []
              tree: []
            python:
              boto3: []
              awscli: []
          files:
            /home/ec2-user/amazon-ssm-agent.rpm:
              source: !Join
                - ''
                - - https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_386/amazon-ssm-agent.rpm
              mode: '000755'
              owner: root
              group: root
          commands:
            '01_setup_aws_ssm_agent':
              command: !Join
                - ''
                - - "yum install -y /home/ec2-user/amazon-ssm-agent.rpm\n"
                  - "# start amazon-ssm-agent\n"
    Properties:
      InstanceType: !Ref 'pmEc2InstanceType'
      ImageId: !Ref 'pmEc2ImageId'
      KeyName: !Ref 'pmAccessKeyId'
      NetworkInterfaces:
        - GroupSet:
            - !Ref 'pmDMZSG'
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref 'pmPublicSubnet1'
      IamInstanceProfile: !Ref 'EC2InstanceProfile'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - "yum update -y\n"
            - "yum install -y aws-cfn-bootstrap\n"
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource BastionServer1 '
            - '         --region '
            - !Ref 'pmVpcRegion'
            - "\n"
            - 'sudo -u ec2-user aws configure set region '
            - !Ref 'pmVpcRegion'
            - "\n"
      Tags:
        - Key: Customer
          Value: !Ref 'pmCustomer'
        - Key: Project
          Value: !Ref 'pmProject'
        - Key: Environment
          Value: !Ref 'pmEnvironment'
        - Key: Name
          Value: !Sub
            - ${Customer}-${Environment}-BastionServer-1
            - Customer: !Ref 'pmCustomer'
              Environment: !Ref 'pmEnvironment'
  BastionServer2:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              telnet: []
              zip: []
              unzip: []
              tree: []
            python:
              boto3: []
              awscli: []
          files:
            /home/ec2-user/amazon-ssm-agent.rpm:
              source: !Join
                - ''
                - - https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_386/amazon-ssm-agent.rpm
              mode: '000755'
              owner: root
              group: root
          commands:
            '01_setup_aws_ssm_agent':
              command: !Join
                - ''
                - - "yum install -y /home/ec2-user/amazon-ssm-agent.rpm\n"
                  - "# start amazon-ssm-agent\n"
    Properties:
      InstanceType: !Ref 'pmEc2InstanceType'
      ImageId: !Ref 'pmEc2ImageId'
      KeyName: !Ref 'pmAccessKeyId'
      NetworkInterfaces:
        - GroupSet:
            - !Ref 'pmDMZSG'
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref 'pmPublicSubnet2'
      IamInstanceProfile: !Ref 'EC2InstanceProfile'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - "yum update -y\n"
            - "yum install -y aws-cfn-bootstrap\n"
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource BastionServer2 '
            - '         --region '
            - !Ref 'pmVpcRegion'
            - "\n"
            - 'sudo -u ec2-user aws configure set region '
            - !Ref 'pmVpcRegion'
            - "\n"
      Tags:
        - Key: Customer
          Value: !Ref 'pmCustomer'
        - Key: Project
          Value: !Ref 'pmProject'
        - Key: Environment
          Value: !Ref 'pmEnvironment'
        - Key: Name
          Value: !Sub
            - ${Customer}-${Environment}-BastionServer-2
            - Customer: !Ref 'pmCustomer'
              Environment: !Ref 'pmEnvironment'
  WebServer1:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
              php: []
              telnet: []
              zip: []
              unzip: []
              tree: []
            python:
              boto3: []
              awscli: []
          files:
            /var/www/html/index.php:
              content: !Join
                - ''
                - - "<?php\n"
                  - "$i_id = file_get_contents(\"http://instance-data/latest/meta-data/instance-id\"\
                    );\n"
                  - "$i_ipv4 = file_get_contents(\"http://instance-data/latest/meta-data/local-ipv4\"\
                    );\n"
                  - "echo \"<h1>Welcome to WebServer Instance #1 </h1>\";\n"
                  - "echo \"<h1>instance-id: \", $i_id, \"</h1>\";\n"
                  - "echo \"<h1>local-ipv4: \", $i_ipv4, \"</h1>\";\n"
                  - "?>\n"
              mode: '000755'
              owner: root
              group: root
            /home/ec2-user/amazon-ssm-agent.rpm:
              source: !Join
                - ''
                - - https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_386/amazon-ssm-agent.rpm
              mode: '000755'
              owner: root
              group: root
          commands:
            '01_setup_aws_ssm_agent':
              command: !Join
                - ''
                - - "yum install -y /home/ec2-user/amazon-ssm-agent.rpm\n"
                  - "# start amazon-ssm-agent\n"
            '02_remove_default_index_file':
              command: rm -f /var/www/html/index.html
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
    Properties:
      InstanceType: !Ref 'pmEc2InstanceType'
      ImageId: !Ref 'pmEc2ImageId'
      KeyName: !Ref 'pmAccessKeyId'
      NetworkInterfaces:
        - GroupSet:
            - !Ref 'pmWEBSG'
          AssociatePublicIpAddress: 'false'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref 'pmPrivateSubnet1'
      IamInstanceProfile: !Ref 'EC2InstanceProfile'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - "yum update -y\n"
            - "yum install -y aws-cfn-bootstrap\n"
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServer1 '
            - '         --region '
            - !Ref 'pmVpcRegion'
            - "\n"
            - 'sudo -u ec2-user aws configure set region '
            - !Ref 'pmVpcRegion'
            - "\n"
      Tags:
        - Key: Customer
          Value: !Ref 'pmCustomer'
        - Key: Project
          Value: !Ref 'pmProject'
        - Key: Environment
          Value: !Ref 'pmEnvironment'
        - Key: Name
          Value: !Sub
            - ${Customer}-${Environment}-WebServer-1
            - Customer: !Ref 'pmCustomer'
              Environment: !Ref 'pmEnvironment'
  WebServer2:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
              php: []
              telnet: []
              zip: []
              unzip: []
              tree: []
            python:
              boto3: []
              awscli: []
          files:
            /var/www/html/index.php:
              content: !Join
                - ''
                - - "<?php\n"
                  - "$i_id = file_get_contents(\"http://instance-data/latest/meta-data/instance-id\"\
                    );\n"
                  - "$i_ipv4 = file_get_contents(\"http://instance-data/latest/meta-data/local-ipv4\"\
                    );\n"
                  - "echo \"<h1>Welcome to WebServer Instance #2 </h1>\";\n"
                  - "echo \"<h1>instance-id: \", $i_id, \"</h1>\";\n"
                  - "echo \"<h1>local-ipv4: \", $i_ipv4, \"</h1>\";\n"
                  - "?>\n"
              mode: '000755'
              owner: root
              group: root
            /home/ec2-user/amazon-ssm-agent.rpm:
              source: !Join
                - ''
                - - https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_386/amazon-ssm-agent.rpm
              mode: '000755'
              owner: root
              group: root
          commands:
            '01_setup_aws_ssm_agent':
              command: !Join
                - ''
                - - "yum install -y /home/ec2-user/amazon-ssm-agent.rpm\n"
                  - "# start amazon-ssm-agent\n"
            '02_remove_default_index_file':
              command: rm -f /var/www/html/index.html
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
    Properties:
      InstanceType: !Ref 'pmEc2InstanceType'
      ImageId: !Ref 'pmEc2ImageId'
      KeyName: !Ref 'pmAccessKeyId'
      NetworkInterfaces:
        - GroupSet:
            - !Ref 'pmWEBSG'
          AssociatePublicIpAddress: 'false'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref 'pmPrivateSubnet2'
      IamInstanceProfile: !Ref 'EC2InstanceProfile'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - "yum update -y\n"
            - "yum install -y aws-cfn-bootstrap\n"
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServer2 '
            - '         --region '
            - !Ref 'pmVpcRegion'
            - "\n"
            - 'sudo -u ec2-user aws configure set region '
            - !Ref 'pmVpcRegion'
            - "\n"
      Tags:
        - Key: Customer
          Value: !Ref 'pmCustomer'
        - Key: Project
          Value: !Ref 'pmProject'
        - Key: Environment
          Value: !Ref 'pmEnvironment'
        - Key: Name
          Value: !Sub
            - ${Customer}-${Environment}-WebServer-2
            - Customer: !Ref 'pmCustomer'
              Environment: !Ref 'pmEnvironment'
Outputs:
  WebServer1:
    Description: Web server 1 id
    Value: !Ref 'WebServer1'
  WebServer2:
    Description: Web server 2 id
    Value: !Ref 'WebServer2'
  WebServerList:
    Description: A list of the web servers
    Value: !Join
      - ','
      - - !Ref 'WebServer1'
        - !Ref 'WebServer2'
