AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a VPC with 1 AZ, IGW, NAT, DMZ, Web, and DB.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Configuration Parameters
        Parameters:
          - pmVpcId
          - pmVpcRegion
          - pmAz
          - pmVpcCidr
          - pmPubSubnetCidr
          - pmPriSubnetCidr
      - Label:
          default: EC2 Configuration Parameters
        Parameters:
          - pmEc2ImageId
          - pmEc2InstanceType
          - pmEc2VolumeSize
          - pmEc2AccessKeyId
    ParameterLabels:
      pmVpcId:
        default: Enter VPC id
      pmVpcCidr:
        default: Enter VPC CIDR
      pmVpcRegion:
        default: Enter VPC region
      pmAz:
        default: Enter VPC AZ
      pmPubSubnetCidr:
        default: Enter VPC public subnet
      pmPriSubnetCidr:
        default: Enter VPC private subnet
      pmEc2ImageId:
        default: Enter EC2 image id
      pmEc2InstanceType:
        default: Enter EC2 instance type
      pmEc2VolumeSize:
        default: Enter EC2 volume size
      pmEc2AccessKeyId:
        default: Enter EC2 SSH access key
Parameters:
  pmVpcId:
    Type: String
    Default: POC
  pmVpcRegion:
    Type: String
    Default: us-east-1
  pmVpcCidr:
    Type: String
    Default: 10.0.0.0/16
  pmPubSubnetCidr:
    Type: String
    Default: 10.0.10.0/24
  pmPriSubnetCidr:
    Type: String
    Default: 10.0.50.0/24
  pmAz:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  pmEc2ImageId:
    Type: String
    Default: ami-28456852
  pmEc2InstanceType:
    Type: String
    Default: t2.micro
  pmEc2VolumeSize:
    Type: Number
    Default: '5'
  pmEc2AccessKeyId:
    Type: AWS::EC2::KeyPair::KeyName
    Default: aws_cory1
Mappings: {}
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'pmVpcCidr'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref 'pmVpcId'
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - '|'
            - - !Ref 'pmVpcId'
              - IGW
  IGWAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'VPC'
      InternetGatewayId: !Ref 'IGW'
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NGW:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt 'EIP.AllocationId'
      SubnetId: !Ref 'PublicSubnet'
      Tags:
        - Key: Name
          Value: !Join
            - '|'
            - - !Ref 'pmVpcId'
              - NGW
    DependsOn:
      - PublicRouteTable
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      CidrBlock: !Ref 'pmPubSubnetCidr'
      AvailabilityZone: !Ref 'pmAz'
      Tags:
        - Key: Type
          Value: Public
        - Key: Name
          Value: !Join
            - '|'
            - - !Ref 'pmPubSubnetCidr'
              - !Ref 'pmAz'
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      CidrBlock: !Ref 'pmPriSubnetCidr'
      AvailabilityZone: !Ref 'pmAz'
      Tags:
        - Key: Type
          Value: Private
        - Key: Name
          Value: !Join
            - '|'
            - - !Ref 'pmPriSubnetCidr'
              - !Ref 'pmAz'
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: Public Route Table
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: IGWAttach
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'IGW'
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet'
      RouteTableId: !Ref 'PublicRouteTable'
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref 'PrivateRouteTable'
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref 'NGW'
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: Private Route Table
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet'
      RouteTableId: !Ref 'PrivateRouteTable'
  DMZSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VPC'
      GroupName: DMZ-SG
      GroupDescription: Enable SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: DMZ-SG
  WEBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VPC'
      GroupName: WEB-SG
      GroupDescription: Enable SSH, HTTP, and HTTPS access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: WEB-SG
  DBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VPC'
      GroupName: DB-SG
      GroupDescription: Enable SSH, and DB access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !Ref 'WEBSG'
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !Ref 'WEBSG'
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !Ref 'DMZSG'
      Tags:
        - Key: Name
          Value: DB-SG
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'EC2InstanceRole'
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: POC-ACCESS
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSLambdaFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/IAMReadOnlyAccess
  DMZ:
    Type: AWS::EC2::Instance
    DependsOn: IGWAttach
    Properties:
      InstanceType: !Ref 'pmEc2InstanceType'
      ImageId: !Ref 'pmEc2ImageId'
      KeyName: !Ref 'pmEc2AccessKeyId'
      NetworkInterfaces:
        - GroupSet:
            - !Ref 'DMZSG'
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref 'PublicSubnet'
      IamInstanceProfile: !Ref 'EC2InstanceProfile'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -v\n"
            - "yum update -y\n"
            - "yum install -y aws-cli epel-release telnet unzip tree\n"
            - "yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_386/amazon-ssm-agent.rpm\n"
            - "start amazon-ssm-agent\n"
      Tags:
        - Key: Name
          Value: DMZ
  WEB:
    Type: AWS::EC2::Instance
    DependsOn: NGW
    Properties:
      InstanceType: !Ref 'pmEc2InstanceType'
      ImageId: !Ref 'pmEc2ImageId'
      KeyName: !Ref 'pmEc2AccessKeyId'
      NetworkInterfaces:
        - GroupSet:
            - !Ref 'WEBSG'
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref 'PublicSubnet'
      IamInstanceProfile: !Ref 'EC2InstanceProfile'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -v\n"
            - "yum update -y\n"
            - "yum install -y aws-cli httpd php php-mysql mysql telnet unzip tree\
              \ git\n"
            - "yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_386/amazon-ssm-agent.rpm\n"
            - "cp /var/www/noindex/index.html /var/www/html\n"
            - "cp /var/www/noindex/index.html /var/www/html/apache.html\n"
            - "service httpd start\n"
            - "chkconfig httpd on\n"
            - "start amazon-ssm-agent\n"
      Tags:
        - Key: Name
          Value: WEB
  DB:
    Type: AWS::EC2::Instance
    DependsOn: NGW
    Properties:
      InstanceType: !Ref 'pmEc2InstanceType'
      ImageId: !Ref 'pmEc2ImageId'
      KeyName: !Ref 'pmEc2AccessKeyId'
      NetworkInterfaces:
        - GroupSet:
            - !Ref 'DBSG'
          AssociatePublicIpAddress: 'false'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref 'PrivateSubnet'
      IamInstanceProfile: !Ref 'EC2InstanceProfile'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -v\n"
            - "yum update -y\n"
            - "yum install -y aws-cli telnet unzip tree mysql-server\n"
            - "yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_386/amazon-ssm-agent.rpm\n"
            - "service mysqld start\n"
            - "chkconfig mysqld on\n"
            - "start amazon-ssm-agent\n"
      Tags:
        - Key: Name
          Value: DB
Outputs:
  VPC:
    Value: !Ref 'VPC'
  IGW:
    Value: !Ref 'IGW'
  NGW:
    Value: !Ref 'NGW'
  DMZ:
    Value: !Ref 'DMZ'
  WEB:
    Value: !Ref 'WEB'
