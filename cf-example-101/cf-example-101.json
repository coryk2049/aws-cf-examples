{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploy a VPC with 1 AZ, IGW, and optional BastionServer.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Resource Configuration Parameters"
                    },
                    "Parameters": [
                        "pmNamePrefix"
                    ]
                },
                {
                    "Label": {
                        "default": "VPC Configuration Parameters"
                    },
                    "Parameters": [
                        "pmVpcRegion",
                        "pmAz",
                        "pmVpcCidr",
                        "pmPubSubnetCidr",
                        "pmPriSubnetCidr"
                    ]
                },
                {
                    "Label": {
                        "default": "Bastion Configuration Parameters"
                    },
                    "Parameters": [
                        "pmDeployBastion",
                        "pmBastionImageId",
                        "pmBastionInstanceType",
                        "pmBastionVolumeSize",
                        "pmBastionAccessKeyId"
                    ]
                }
            ],
            "ParameterLabels": {
                "pmNamePrefix": {
                    "default": "Enter resource name prefix"
                },
                "pmVpcCidr": {
                    "default": "Enter VPC CIDR"
                },
                "pmVpcRegion": {
                    "default": "Enter VPC region"
                },
                "pmAz": {
                    "default": "Enter VPC AZ"
                },
                "pmPubSubnetCidr": {
                    "default": "Enter VPC public subnet"
                },
                "pmPriSubnetCidr": {
                    "default": "Enter VPC private subnet"
                },
                "pmDeployBastion": {
                    "default": "Enter Bastion deployment"
                },
                "pmBastionImageId": {
                    "default": "Enter Bastion image id"
                },
                "pmBastionInstanceType": {
                    "default": "Enter Bastion instance type"
                },
                "pmBastionVolumeSize": {
                    "default": "Enter Bastion volume size"
                },
                "pmBastionAccessKeyId": {
                    "default": "Enter Bastion SSH access key"
                }
            }
        }
    },
    "Parameters": {
        "pmNamePrefix": {
            "Type": "String",
            "MaxLength": 15,
            "MinLength": 2,
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "Default": "poc"
        },
        "pmVpcRegion": {
            "Type": "String",
            "Default": "us-east-1"
        },
        "pmVpcCidr": {
            "Type": "String",
            "Default": "10.0.0.0/16"
        },
        "pmPubSubnetCidr": {
            "Type": "String",
            "Default": "10.0.10.0/24"
        },
        "pmPriSubnetCidr": {
            "Type": "String",
            "Default": "10.0.50.0/24"
        },
        "pmAz": {
            "Type": "AWS::EC2::AvailabilityZone::Name",
            "Default": "us-east-1a"
        },
        "pmDeployBastion": {
            "Default": "Yes",
            "Type": "String",
            "AllowedValues": [
                "No",
                "Yes"
            ]
        },
        "pmBastionImageId": {
            "Type": "String",
            "Default": "ami-28456852",
            "AllowedValues": [
                "ami-28456852",
                "ami-eca289fb",
                "ami-446f3521"
            ],
            "ConstraintDescription": "Must be a valid Bastion EC2 image id"
        },
        "pmBastionInstanceType": {
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium"
            ],
            "ConstraintDescription": "Must be a valid Bastion EC2 instance type"
        },
        "pmBastionVolumeSize": {
            "Type": "Number",
            "Default": "5",
            "MinValue": "5",
            "MaxValue": "1024",
            "ConstraintDescription": "Must be between 5 and 1024 Gb"
        },
        "pmBastionAccessKeyId": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "aws_cory1"
        }
    },
    "Conditions": {
        "DeployBastion": {
            "Fn::Equals": [
                {
                    "Ref": "pmDeployBastion"
                },
                "Yes"
            ]
        }
    },
    "Mappings": {},
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "pmVpcCidr"
                },
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "pmNamePrefix"
                                    },
                                    "-vpc"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "IGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "pmNamePrefix"
                                    },
                                    "-igw"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "IGWAttach": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "IGW"
                }
            }
        },
        "PublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "pmPubSubnetCidr"
                },
                "AvailabilityZone": {
                    "Ref": "pmAz"
                },
                "Tags": [
                    {
                        "Key": "Type",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "pmNamePrefix"
                                    },
                                    "-public-sn"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PrivateSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "pmPriSubnetCidr"
                },
                "AvailabilityZone": {
                    "Ref": "pmAz"
                },
                "Tags": [
                    {
                        "Key": "Type",
                        "Value": "Private"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "pmNamePrefix"
                                    },
                                    "-private-sn"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "pmNamePrefix"
                                    },
                                    "-public-rtb"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "IGWAttach",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                }
            }
        },
        "PublicSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "pmNamePrefix"
                                    },
                                    "-private-rtb"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PrivateSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "BastionSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupName": "Bastion-SG",
                "GroupDescription": "Enable SSH, HTTP, and HTTPS access",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Bastion-SG"
                    }
                ]
            }
        },
        "BastionInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "BastionInstanceRole"
                    }
                ]
            }
        },
        "BastionInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "BASTION-ACCESS",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "arn:aws:iam::aws:policy/AmazonSSMFullAccess",
                    "arn:aws:iam::aws:policy/IAMReadOnlyAccess"
                ]
            }
        },
        "BastionServer": {
            "Type": "AWS::EC2::Instance",
            "Condition": "DeployBastion",
            "DependsOn": "IGWAttach",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "packages": {
                            "yum": {
                                "mysql": [],
                                "telnet": [],
                                "git": [],
                                "zip": [],
                                "unzip": [],
                                "dos2unix": [],
                                "tree": []
                            },
                            "python": {
                                "boto3": [],
                                "awscli": []
                            }
                        },
                        "files": {
                            "/root/.aws/config": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[default]",
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "pmVpcRegion"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            },
                            "/home/ec2-user/.aws/config": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[default]",
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "pmVpcRegion"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000644",
                                "owner": "ec2-user",
                                "group": "ec2-user"
                            },
                            "/home/ec2-user/amazon-ssm-agent.rpm": {
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_386/amazon-ssm-agent.rpm"
                                        ]
                                    ]
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    },
                    "commands": {
                        "01_setup_aws_ssm_agent": {
                            "command": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "yum install -y /home/ec2-user/amazon-ssm-agent.rpm\n",
                                        "# start amazon-ssm-agent\n"
                                    ]
                                ]
                            }
                        }
                    }
                }
            },
            "Properties": {
                "InstanceType": {
                    "Ref": "pmBastionInstanceType"
                },
                "ImageId": {
                    "Ref": "pmBastionImageId"
                },
                "KeyName": {
                    "Ref": "pmBastionAccessKeyId"
                },
                "NetworkInterfaces": [
                    {
                        "GroupSet": [
                            {
                                "Ref": "BastionSG"
                            }
                        ],
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": {
                            "Ref": "PublicSubnet"
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "BastionInstanceProfile"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum update -y\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "# Install the files and packages from the metadata\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource BastionServer ",
                                "         --region ",
                                {
                                    "Ref": "pmVpcRegion"
                                },
                                "\n"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "BastionServer"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "VPC": {
            "Value": {
                "Ref": "VPC"
            }
        },
        "IGW": {
            "Value": {
                "Ref": "IGW"
            }
        },
        "BastionServer": {
            "Value": {
                "Fn::If": [
                    "DeployBastion",
                    {
                        "Fn::GetAtt": [
                            "BastionServer",
                            "PublicIp"
                        ]
                    },
                    "AWS::NoValue"
                ]
            }
        }
    }
}