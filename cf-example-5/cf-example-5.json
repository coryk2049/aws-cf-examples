{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploy a VPC with 2 AZ, WebServers, ALB, and ASG",
    "Parameters": {
        "pmVpcId": {
            "Description": "VPC Id (e.g. POC)",
            "Type": "String",
            "Default": "POC"
        },
        "pmVpcRegion": {
            "Description": "VPC Region",
            "Type": "String",
            "Default": "us-east-1"
        },
        "pmVpcCidr": {
            "Description": "VPC CIDR (e.g. 10.0.0.0/16)",
            "Type": "String",
            "Default": "10.0.0.0/16"
        },
        "pmPubSubnetCidr1": {
            "Description": "Public subnet CIDR 1 (e.g. 10.0.10.0/24)",
            "Type": "String",
            "Default": "10.0.10.0/24"
        },
        "pmPubSubnetCidr2": {
            "Description": "Public subnet CIDR 2 (e.g. 10.0.20.0/24)",
            "Type": "String",
            "Default": "10.0.20.0/24"
        },
        "pmPriSubnetCidr1": {
            "Description": "Private subnet CIDR 1 (e.g. 10.0.50.0/24)",
            "Type": "String",
            "Default": "10.0.50.0/24"
        },
        "pmPriSubnetCidr2": {
            "Description": "Private subnet CIDR 2 (e.g. 10.0.60.0/24)",
            "Type": "String",
            "Default": "10.0.60.0/24"
        },
        "pmAz1": {
            "Description": "AZ 1 for public and private subnets",
            "Type": "AWS::EC2::AvailabilityZone::Name",
            "Default": "us-east-1a"
        },
        "pmAz2": {
            "Description": "AZ 2 for public and private subnets",
            "Type": "AWS::EC2::AvailabilityZone::Name",
            "Default": "us-east-1b"
        },
        "pmWebServerImageId": {
            "Description": "Web server EC2 image id",
            "Type": "String",
            "Default": "ami-28456852",
            "AllowedValues": [
                "ami-28456852",
                "ami-eca289fb",
                "ami-446f3521"
            ],
            "ConstraintDescription": "Must be a valid web server EC2 image id"
        },
        "pmWebServerInstanceType": {
            "Description": "Web server EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium"
            ],
            "ConstraintDescription": "Must be a valid web server EC2 instance type"
        },
        "pmWebServerVolumeSize": {
            "Description": "Volume size for web server EC2 instance type",
            "Type": "Number",
            "Default": "10",
            "MinValue": "5",
            "MaxValue": "1024",
            "ConstraintDescription": "Must be between 5 and 1024 Gb"
        },
        "pmWebServerCapacity": {
            "Description": "Initial number of web server EC2 instances",
            "Type": "Number",
            "Default": "1",
            "MinValue": "1",
            "MaxValue": "4",
            "ConstraintDescription": "Must be between 1 and 4 web server EC2 instances."
        },
        "pmAccessKeyId": {
            "Description": "Existing access key to enable SSH access to web server EC2 instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "aws_cory1"
        }
    },
    "Mappings": {},
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "pmVpcCidr"
                },
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "pmVpcId"
                        }
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "|",
                                [
                                    {
                                        "Ref": "pmVpcId"
                                    },
                                    "IGW"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "pmPubSubnetCidr1"
                },
                "AvailabilityZone": {
                    "Ref": "pmAz1"
                },
                "Tags": [
                    {
                        "Key": "Type",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "|",
                                [
                                    {
                                        "Ref": "pmPubSubnetCidr1"
                                    },
                                    {
                                        "Ref": "pmAz1"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "pmPriSubnetCidr1"
                },
                "AvailabilityZone": {
                    "Ref": "pmAz1"
                },
                "Tags": [
                    {
                        "Key": "Type",
                        "Value": "Private"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "|",
                                [
                                    {
                                        "Ref": "pmPriSubnetCidr1"
                                    },
                                    {
                                        "Ref": "pmAz1"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "pmPubSubnetCidr2"
                },
                "AvailabilityZone": {
                    "Ref": "pmAz2"
                },
                "Tags": [
                    {
                        "Key": "Type",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "|",
                                [
                                    {
                                        "Ref": "pmPubSubnetCidr2"
                                    },
                                    {
                                        "Ref": "pmAz2"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "pmPriSubnetCidr2"
                },
                "AvailabilityZone": {
                    "Ref": "pmAz2"
                },
                "Tags": [
                    {
                        "Key": "Type",
                        "Value": "Private"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "|",
                                [
                                    {
                                        "Ref": "pmPriSubnetCidr2"
                                    },
                                    {
                                        "Ref": "pmAz2"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public Route Table"
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "AttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private Route Table"
                    }
                ]
            }
        },
        "PrivateSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupName": "WEB-SG",
                "GroupDescription": "Enable SSH access via port 22",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB-SG"
                    }
                ]
            }
        },
        "WebServerInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "WebServerInstanceRole"
                    }
                ]
            }
        },
        "WebServerInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "POC-ACCESS",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "arn:aws:iam::aws:policy/IAMReadOnlyAccess"
                ]
            }
        },
        "WebServerGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": [
                    {
                        "Ref": "pmAz1"
                    },
                    {
                        "Ref": "pmAz2"
                    }
                ],
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PublicSubnet1"
                    },
                    {
                        "Ref": "PublicSubnet2"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfig"
                },
                "MinSize": "1",
                "MaxSize": "4",
                "Cooldown": "30",
                "DesiredCapacity": {
                    "Ref": "pmWebServerCapacity"
                },
                "TargetGroupARNs": [
                    {
                        "Ref": "ALBTargetGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WEB-ASG",
                        "PropagateAtLaunch": "true"
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT15M",
                    "Count": {
                        "Ref": "pmWebServerCapacity"
                    }
                }
            },
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MinSuccessfulInstancesPercent": "100",
                    "MinInstancesInService": "1",
                    "MaxBatchSize": "1",
                    "PauseTime": "PT15M",
                    "WaitOnResourceSignals": "true"
                }
            }
        },
        "LaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "pmVpcRegion"
                                            },
                                            "\n",
                                            "interval=1\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -v ",
                                            "         --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource LaunchConfig ",
                                            "         --region ",
                                            {
                                                "Ref": "pmVpcRegion"
                                            },
                                            "\n",
                                            "runas=root\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "WebServerInstanceProfile"
                },
                "ImageId": {
                    "Ref": "pmWebServerImageId"
                },
                "InstanceType": {
                    "Ref": "pmWebServerInstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "AssociatePublicIpAddress": "true",
                "KeyName": {
                    "Ref": "pmAccessKeyId"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum update -y\n",
                                "yum install aws-cfn-bootstrap aws-cli nginx git unzip -y\n",
                                "service nginx start\n",
                                "cp /usr/share/nginx/html/index.html /usr/share/nginx/html/nginx.html\n",
                                "chkconfig nginx on\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource LaunchConfig ",
                                "         --region ",
                                {
                                    "Ref": "pmVpcRegion"
                                },
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource WebServerGroup ",
                                "         --region ",
                                {
                                    "Ref": "pmVpcRegion"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "ALBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckIntervalSeconds": 10,
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 2,
                "HealthCheckPath": "/index.html",
                "HealthCheckPort": 80,
                "Name": "Nginx",
                "Port": 80,
                "Protocol": "HTTP",
                "UnhealthyThresholdCount": 5,
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "ALB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": "POC-ALB",
                "Scheme": "internet-facing",
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "PublicSubnet1"
                    },
                    {
                        "Ref": "PublicSubnet2"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "POC-ALB"
                    }
                ]
            }
        },
        "ALBListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "ALBTargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ALB"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },
        "ALBListenerRule": {
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "Properties": {
                "Actions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "ALBTargetGroup"
                        }
                    }
                ],
                "Conditions": [
                    {
                        "Field": "path-pattern",
                        "Values": [
                            "/nginx.html"
                        ]
                    }
                ],
                "ListenerArn": {
                    "Ref": "ALBListener"
                },
                "Priority": 1
            }
        }
    },
    "Outputs": {
        "VPC": {
            "Value": {
                "Ref": "VPC"
            }
        },
        "InternetGateway": {
            "Value": {
                "Ref": "InternetGateway"
            }
        },
        "URL": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "ALB",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        }
    }
}