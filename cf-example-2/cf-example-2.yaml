AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a VPC with 2 AZs
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Configuration Parameters
        Parameters:
          - pmVpcId
          - pmVpcRegion
          - pmAz1
          - pmAz2
          - pmVpcCidr
          - pmPubSubnetCidr1
          - pmPubSubnetCidr2
          - pmPriSubnetCidr1
          - pmPriSubnetCidr2
    ParameterLabels:
      pmVpcId:
        default: Enter VPC id
      pmVpcCidr:
        default: Enter VPC CIDR
      pmVpcRegion:
        default: Enter VPC region
      pmAz1:
        default: Enter VPC AZ1
      pmAz2:
        default: Enter VPC AZ2
      pmPubSubnetCidr1:
        default: Enter VPC public subnet1
      pmPubSubnetCidr2:
        default: Enter VPC public subnet2
      pmPriSubnetCidr1:
        default: Enter VPC private subnet1
      pmPriSubnetCidr2:
        default: Enter VPC private subnet2
Parameters:
  pmVpcId:
    Type: String
    Default: POC
  pmVpcRegion:
    Type: String
    Default: us-east-1
  pmVpcCidr:
    Type: String
    Default: 10.0.0.0/16
  pmPubSubnetCidr1:
    Type: String
    Default: 10.0.10.0/24
  pmPriSubnetCidr1:
    Type: String
    Default: 10.0.50.0/24
  pmAz1:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  pmPubSubnetCidr2:
    Type: String
    Default: 10.0.20.0/24
  pmPriSubnetCidr2:
    Type: String
    Default: 10.0.60.0/24
  pmAz2:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1b
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'pmVpcCidr'
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: !Ref 'pmVpcId'
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - '|'
            - - !Ref 'pmVpcId'
              - IGW
  IGWAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'VPC'
      InternetGatewayId: !Ref 'IGW'
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      CidrBlock: !Ref 'pmPubSubnetCidr1'
      AvailabilityZone: !Ref 'pmAz1'
      Tags:
        - Key: Type
          Value: Public
        - Key: Name
          Value: !Join
            - '|'
            - - !Ref 'pmPubSubnetCidr1'
              - !Ref 'pmAz1'
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      CidrBlock: !Ref 'pmPriSubnetCidr1'
      AvailabilityZone: !Ref 'pmAz1'
      Tags:
        - Key: Type
          Value: Private
        - Key: Name
          Value: !Join
            - '|'
            - - !Ref 'pmPriSubnetCidr1'
              - !Ref 'pmAz1'
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      CidrBlock: !Ref 'pmPubSubnetCidr2'
      AvailabilityZone: !Ref 'pmAz2'
      Tags:
        - Key: Type
          Value: Public
        - Key: Name
          Value: !Join
            - '|'
            - - !Ref 'pmPubSubnetCidr2'
              - !Ref 'pmAz2'
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      CidrBlock: !Ref 'pmPriSubnetCidr2'
      AvailabilityZone: !Ref 'pmAz2'
      Tags:
        - Key: Type
          Value: Private
        - Key: Name
          Value: !Join
            - '|'
            - - !Ref 'pmPriSubnetCidr2'
              - !Ref 'pmAz2'
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: Public Route Table
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: IGWAttach
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'IGW'
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet1'
      RouteTableId: !Ref 'PublicRouteTable'
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet2'
      RouteTableId: !Ref 'PublicRouteTable'
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: Private Route Table
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet1'
      RouteTableId: !Ref 'PrivateRouteTable'
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet2'
      RouteTableId: !Ref 'PrivateRouteTable'
Outputs:
  VPC:
    Value: !Ref 'VPC'
  IGW:
    Value: !Ref 'IGW'
