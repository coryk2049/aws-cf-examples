AWSTemplateFormatVersion: 2010-09-09
Description: Deploy nested stack for ACME

Mappings:
    EnvMap:
        DEV:
            S3Bucket: "https://acme-networking-demo.s3.amazonaws.com"
        STAGE:
            S3Bucket: "https://acme-networking-demo.s3.amazonaws.com"
        PROD:
            S3Bucket: "https://acme-networking-demo.s3.amazonaws.com"

Parameters:
    Environment:
        Description: Environment
        Type: String
        Default: DEV
        AllowedValues:
          - DEV
          - STAGE
          - PROD
    AvailabilityZone:
        Description: AvailabilityZone
        Type: String
        Default: us-east-1a
        AllowedValues:
          - us-east-1a
          - us-east-1b
    EnableFlowLogs:
        Description: Enable VPC flow logs
        Type: String
        Default: 'Yes'
        AllowedValues:
          - 'Yes'
          - 'No'
    KeyName:
        Description: AWS EC2 Key Pair
        Type: AWS::EC2::KeyPair::KeyName
        Default: aws_cory1
    LinuxAMI:
        Description: The Current AMI for Linux.
        Type: AWS::EC2::Image::Id
        Default: ami-0b5eea76982371e91

#Conditions:
#    EnableFlowLogs: !Equals [ !Ref EnableFlowLogs, 'Yes' ]

Resources:
    IAMStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['', [!FindInMap [EnvMap, !Ref Environment, S3Bucket], /iam.yaml]]
            Parameters:
                EnableFlowLogs         : !Ref EnableFlowLogs

    VPCStack:
        Type: AWS::CloudFormation::Stack
        DependsOn: IAMStack
        Properties:
            TemplateURL: !Join ['', [!FindInMap [EnvMap, !Ref Environment, S3Bucket], /vpc.yaml]]
            Parameters:
                AvailabilityZone      : !Ref AvailabilityZone
                Environment           : !Ref Environment
                EnableFlowLogs        : !Ref EnableFlowLogs
                FlowLogsRole          : !GetAtt IAMStack.Outputs.FlowLogsRole
    SGStack:
        Type: AWS::CloudFormation::Stack
        DependsOn: VPCStack
        Properties:
            TemplateURL: !Join ['', [!FindInMap [EnvMap, !Ref Environment, S3Bucket], /sg.yaml]]
            Parameters:
                Environment            : !Ref Environment
                VpcId                  : !GetAtt 'VPCStack.Outputs.VpcId'
    BastionStack:
        Type: AWS::CloudFormation::Stack
        DependsOn: SGStack
        Properties:
            TemplateURL: !Join ['', [!FindInMap [EnvMap, !Ref Environment, S3Bucket], /bastion.yaml]]
            Parameters:
                BastionSecurityGroup   : !GetAtt SGStack.Outputs.BastionSecurityGroup
                Environment            : !Ref Environment
                KeyName                : !Ref KeyName
                PublicSubnet           : !GetAtt 'VPCStack.Outputs.PublicSubnet'
                AssignEIP              : 'Yes'
